openapi: 3.0.0

info:
  title: Server API
  description: API definition
  version: 1.0.0

servers:
  - url: http://localhost

paths:
  /water/recommendation/{field_id}:
    get:
      parameters:
        - name: field_id
          in: path
          required: true
          schema:
            type: string
      summary: Get water recommendation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWaterRecommendation'
        '500':
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            plain/text:
              schema:
                type: string
  /water/limit:
    get:
      summary: Get water limit
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: number
                format: float
        '500':
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            plain/text:
              schema:
                type: string
    post:
      summary: Set water limit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWaterLimitBody'
      responses:
        '201':
          description: OK
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            plain/text:
              schema:
                type: string
  /water/limit/all:
    get:
      summary: Get water limits for each agricultural company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LimiteAcquistoAzienda'
        '500':
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            plain/text:
              schema:
                type: string
  /water/stock:
    get:
      summary: Get water remaining in reserve
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWaterReserveMulti'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            plain/text:
              schema:
                type: string
  /water/stock/{field_id}:
    get:
      summary: Get water remaining in reserve
      parameters:
        - name: field_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWaterReserveMono'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            plain/text:
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            plain/text:
              schema:
                type: string
  /water/buy:
    post:
      summary: Buy water
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWaterBuyBody'
      responses:
        '201':
          description: OK
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /water/offer:
    get:
      summary: Get water offers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWaterOffers'
        '500':
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            plain/text:
              schema:
                type: string
    post:
      summary: Create water offer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWaterOfferBody'
      responses:
        '201':
          description: OK
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /water/offer/{offer_id}:
    delete:
      summary: Delete water offer
      parameters:
        - name: offer_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            plain/text:
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: Update water offer
      parameters:
        - name: offer_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchWaterOfferBody'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            plain/text:
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /water/order:
    get:
      summary: Get historical water orders for an agricultural company or orders made by WS
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetOrderBuy'
        '500':
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            plain/text:
              schema:
                type: string
  /water/consumption:
    get:
      summary: Get data on crop consumption for fields owned by an agricultural company or consumption for fields that WS has selled
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetConsumption'
        '500':
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            plain/text:
              schema:
                type: string
  /field/{field_id}:
    get:
      summary: Get field
      parameters:
        - name: field_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetField'
        '404':
          description: Not found
          content:
            plain/text:
              schema:
                type: string
        '500':  
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            plain/text:
              schema:
                type: string
    patch:
      summary: Update field
      parameters:
        - name: field_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchFieldBody'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            plain/text:
              schema:
                type: string
        '500':  
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            plain/text:
              schema:
                type: string
  /field:
    get:
      summary: Get fields
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFields'
        '500':  
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            plain/text:
              schema:
                type: string
    post:
      summary: Create field
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFieldBody'
      responses:
        '201':
          description: OK
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':  
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            plain/text:
              schema:
                type: string
  /object/sensor:
    get:
      summary: Get historical data from humidity/temperature sensors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SensoreLog'
        '500':
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            plain/text:
              schema:
                type: string
  /object/actuator:
    get:
      summary: Get historical data from actuators
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttuatoreLog'
        '500':
          description: Internal server error
          content:
            plain/text:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            plain/text:
              schema:
                type: string
  /analytics/{company_id}/water_consumption:


security:
  - bearerAuth: []


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT id_token provided by auth server
  schemas:
    GetWaterRecommendation:
      type: object
      properties:
        total_estimated:
          type: number
          format: float
        total_remaining:
          type: number
          format: float
    ErrorResponse:
      type: object
      properties:
        missing_fields:
          type: object
          properties:
            header:
              type: array
              items:
                type: string
            request_body:
              type: array
              items:
                type: string
        invalid_fields:
          type: object
          properties:
            header:
              type: array
              items:
                type: string
            request_body:
              type: array
              items:
                type: string
        reason:
          type: object
          properties:
            header:
              type: string
            request_body:
              type: string
            generic:
              type: string
    PostWaterLimitBody:
      type: object
      properties:
        vat_number:
          type: string
        limit:
          type: number
          format: float
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
      required:
        - limit
        - start_date
    GetWaterReserveMulti:
      type: array
      items:
        type: object
        properties:
          field_id:
            type: string
          limit:
            type: number
            format: float
    GetWaterReserveMono:
      type: object
      properties:
        field_id:
          type: string
        limit:
          type: number
          format: float
    PostWaterBuyBody:
      type: object
      properties:
        field_id:
          type: string
        amount:
          type: number
          format: float
        offer_id:
          type: string
        date:
          type: string
          format: date-time
      required:
        - field_id
        - amount
        - offer_id
        - date
    GetWaterOffers:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            format: uuid
          amount:
            type: number
            format: float
          price:
            type: number
            format: float
          date:
            type: string
            format: date-time
    PostWaterOfferBody:
      type: object
      properties:
        amount:
          type: number
          format: float
        price:
          type: number
          format: float
        date:
          type: string
          format: date-time
      required:
        - amount
        - price
        - date
    PatchWaterOfferBody:
      type: object
      properties:
        update_amount_to:
          type: number
          format: float
    GetOrderBuy:
      type: object
      properties:
        offer_id:
          type: string
        company_vat_number:
          type: string
        field_id:
          type: string
        amount:
          type: number
          format: float
      required:
        - offer_id
        - company_vat_number
        - field_id
        - amount
    GetConsumption:
      type: object
      properties:
        company_vat_number:
          type: string
        field_id:
          type: string
        data:
          type: string
        amount_used:
          type: number
          format: float
        amount_ordered:
          type: number
          format: float
      required:
        - company_vat_number
        - field_id
        - data
        - amount_used
        - amount_ordered
    GetField:
      type: object
      properties:
        id:
          type: string
          format: uuid
        square_meters:
          type: number
          format: float
        crop_type:
          type: string
        irrigation_type:
          type: string
    GetFields:
      type: array
      items:
        $ref: '#/components/schemas/GetField'
    PatchFieldBody:
      type: object
      properties:
        square_meters:
          type: number
          format: float
        crop_type:
          type: string
        irrigation_type:
          type: string
    PostFieldBody:
      type: object
      properties:
        square_meters:
          type: number
          format: float
        crop_type:
          type: string
        irrigation_type:
          type: string
      required:
        - square_meters
        - crop_type
        - irrigation_type
    SensoreLog:
      type: object
      properties:
        object_id:
          type: string
        field_id:
          type: string
        type:
          type: string
        time:
          type: string
          format: date-time
        amount:
          type: number
          format: float
      required:
        - object_id
        - field_id
        - type
        - time
        - amount
    AttuatoreLog:
      type: object
      properties:
        object_id:
          type: string
        field_id:
          type: string
        time:
          type: string
          format: date-time
        active:
          type: boolean
      required:
        - object_id
        - field_id
        - time
        - active
    LimiteAcquistoAzienda:
      type: object
      properties:
        company_vat_number:
          type: string
        limit:
          type: number
          format: float
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
      required:
        - company_vat_number
        - limit
        - start_date

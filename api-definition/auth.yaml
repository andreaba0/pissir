openapi: 3.0.0

info:
  title: Auth API
  description: API definition for authorization and authentication server
  version: 1.0.0


paths:
  /profile:
    get:
      summary: Returns profile info
      description: Get user profile info and company vat number that he belongs to
      responses:
        '200':
          description: Returns user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '404':
          description: User not found
          content:
            text/plain:
              schema:
                type: string
                example: User not found
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
  /service/apply:
    post:
      summary: Form to apply to use the service
      description: Form to apply to use the service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Apply'
      responses:
        '200':
          description: Accept user apply request and returns OK
          content:
            text/plain:
              schema:
                type: string
                example: OK
        '400':
          description: User already applied
          content:
            text/plain:
              schema:
                type: string
                example: User already applied
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
  /service/my_application:
    get:
      summary: Returns user application status
      description: Returns user application status
      responses:
        '200':
          description: Returns user application status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '404':
          description: User application not found
          content:
            text/plain:
              schema:
                type: string
                example: User application not found
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
  /service/application:
    get:
      summary: Returns user application status
      description: Returns user application status
      responses:
        '200':
          description: Returns user application status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications'
        '404':
          description: User application not found
          content:
            text/plain:
              schema:
                type: string
                example: User application not found
        '400':
          description: User already accepted
          content:
            text/plain:
              schema:
                type: string
                example: User already accepted
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
  /service/application/{id}/{action}:
    post:
      summary: Accept or reject user application
      description: Accept or reject user application
      parameters:
        - name: id
          in: path
          description: User application id
          required: true
          schema:
            type: string
        - name: action
          in: path
          description: Action to perform
          required: true
          schema:
            type: string
            enum: [accept, reject]
      responses:
        '200':
          description: Accept or reject user application
          content:
            text/plain:
              schema:
                type: string
                example: OK
        '404':
          description: User application not found
          content:
            text/plain:
              schema:
                type: string
                example: User application not found
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
  /company:
    get:
      summary: Returns company info
      description: Returns company info
      responses:
        '200':
          description: Returns company info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '400':
          description: Partial company info, some fields are missing
          content:
            text/plain:
              schema:
                type: string
                example: Partial company info
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
    patch:
      summary: Update company info
      description: Update company info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '200':
          description: Update company info
          content:
            text/plain:
              schema:
                type: string
                example: OK
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
  /apiaccess:
    get:
          summary: Get a list of all API access requests
          description: Returns a list of all requests for API access
          responses:
            '200':
              description: Returns a list of API access requests
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ApiAccessRequests'
            '401':
              description: Unauthorized
              content:
                text/plain:
                  schema:
                    type: string
                    example: Unauthorized  
    post:
      summary: Request access to API server
      description: Request access to API server
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiAccess'
      responses:
        '202':
          description: Request accepted from the server and is being processed
          content:
            text/plain:
              schema:
                type: string
                example: OK
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
  /apiaccess/{id}/{action}:
    post:
      summary: Accept or reject user api access request
      description: Accept or reject user api access request
      parameters:
        - name: id
          in: path
          description: User api access request id
          required: true
          schema:
            type: string
        - name: action
          in: path
          description: Action to perform
          required: true
          schema:
            type: string
            enum: [accept, reject]
      responses:
        '200':
          description: Accept or reject user api access request
          content:
            text/plain:
              schema:
                type: string
                example: OK
        '404':
          description: User api access request not found
          content:
            text/plain:
              schema:
                type: string
                example: User api access request not found
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
  /token:
    post:
      summary: Returns JWT token
      description: Returns JWT access token to api server
      responses:
        '200':
          description: Returns JWT token
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized


security:
  - bearerAuth: []


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT id_token provided by auth server
  schemas:
    Profile:
      type: object
      properties:
        id:
          type: string
          description: User id
        given_name:
          type: string
          description: User name
        family_name:
          type: string
          description: User surname
        email:
          type: string
          description: User email
        tax_code:
          type: string
          description: User tax code
        role:
          type: string
          description: User role
          enum: [WSP, FAR]
        company:
          type: string
          description: Company vat number
    Apply:
      type: object
      required:
        - company_var_number
        - tax_code
        - company_category
      properties:
        company_var_number:
          type: string
          description: Company vat number
        given_name:
          type: string
          description: User name
        family_name:
          type: string
          description: User surname
        tax_code:
          type: string
          description: User tax code
        company_category:
          type: string
          description: Company category
          enum: [WSP, FAR]
    Applications:
      type: array
      items:
        $ref: '#/components/schemas/Application'
    Application:
      type: object
      properties:
        id:
          type: string
          description: User application id
        company_vat_number:
          type: string
          description: Company vat number
        given_name:
          type: string
          description: User name
        family_name:
          type: string
          description: User surname
        tax_code:
          type: string
          description: User tax code
        email:
          type: string
          description: User email
        company_category:
          type: string
          description: Company category
          enum: [WSP, FAR]
    Company:
      type: object
      properties:
        vat_number:
          type: string
          description: Company vat number
        name:
          type: string
          description: Company name
        address:
          type: string
          description: Company address
        phone:
          type: string
          description: Company phone
        email:
          type: string
          description: Company email
        industry_sector:
          type: string
          description: Company industry sector
          enum: [WSP, FAR]
    ApiAccess:
      type: object
      required:
        - date_start
        - date_end
      properties:
        date_start:
          type: string
          description: Date start
          format: date-time
        date_end:
          type: string
          description: Date end
          format: date-time
    ApiAccessRequests:
      type: array
      items:
        $ref: '#/components/schemas/ApiAccessRequest'
    ApiAccessRequest:
      type: object
      properties:
        id:
          type: string
          description: API access request id
        email:
          type: string
          description: User email
        tax_code:
          type: string
          description: User tax code
        given_name:
          type: string
          description: User name
        family_name:
          type: string
          description: User surname
        company_vat_number:
          type: string
          description: Company vat number
        date_start:
          type: string
          description: Date start
          format: date-time
        date_end:
          type: string
          description: Date end
          format: date-time

from mcr.microsoft.com/dotnet/aspnet:8.0 as dotnet8_runtime_nettools
run apt update && apt install -y net-tools iproute2

from mcr.microsoft.com/dotnet/sdk:8.0 as build


run mkdir -p /app/backend/api/src

run mkdir -p /app/backend/library/OpenIdManager/src
run mkdir -p /app/backend/library/MQTTPooledLibrary/MQTTPooled

run mkdir -p /app/backend/api/test

copy ./api/src/api.csproj /app/backend/api/src
copy ./library/OpenIdManager/src/OpenIdManager.csproj /app/backend/library/OpenIdManager/src
copy ./library/MQTTPooledLibrary/MQTTPooled/MQTTPooled.csproj /app/backend/library/MQTTPooledLibrary/MQTTPooled
copy ./api/test/test.csproj /app/backend/api/test

workdir /app/

workdir /app/backend/library/OpenIdManager/src
run dotnet restore --no-cache OpenIdManager.csproj
workdir /app/backend/api/src
run dotnet restore --no-cache api.csproj
workdir /app/backend/api/test
run dotnet restore --no-cache test.csproj
workdir /app/backend/library/MQTTPooledLibrary/MQTTPooled
run dotnet restore --no-cache MQTTPooled.csproj


WORKDIR /app/backend/api/src


# Copy source code
COPY ./library/OpenIdManager/src/Module /app/backend/library/OpenIdManager/src/
COPY ./library/MQTTPooledLibrary/MQTTPooled/MQTT /app/backend/library/MQTTPooledLibrary/MQTTPooled/

COPY ./api/src/Module /app/backend/api/src/
COPY ./api/src/Routes /app/backend/api/src/
COPY ./api/src/Middleware /app/backend/api/src/
COPY ./api/src/Main_Processes /app/backend/api/src/
COPY ./api/src/Interface /app/backend/api/src/
COPY ./api/src/Types /app/backend/api/src/
COPY ./api/src/Utility /app/backend/api/src/
COPY ./api/src/Program.cs /app/backend/api/src/

run mkdir -p /app/backend/api/test

copy ./api/test/test.csproj /app/backend/api/test
copy ./api/test/Data /app/backend/api/test/Data
copy ./api/test/GlobalUsings.cs /app/backend/api/test

workdir /app/backend/api/test/

#run dotnet test --no-restore

workdir /app/backend/api/src

env ASPNETCORE_ENVIRONMENT=Testing
env DOTNET_ENVIRONMENT=Testing

run dotnet build -o /publish_compiled --no-restore

from dotnet8_runtime_nettools as final_runtime
run mkdir -p /app_compiled/shared_log
copy --from=build /publish_compiled /app_compiled
#copy ./auth/src/appsettings.json /app_compiled
#copy /auth/src/appsettings.Testing.json /app_compiled
workdir /app_compiled

env ASPNETCORE_ENVIRONMENT=Testing
env DOTNET_ENVIRONMENT=Testing

expose 8000

#run dotnet and redirect output to file /app_compiled/log.txt
entrypoint ["dotnet", "api.dll"]
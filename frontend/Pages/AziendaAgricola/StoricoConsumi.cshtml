@page
@using Newtonsoft.Json
@model frontend.Pages.AziendaAgricola.StoricoConsumiModel
@{
    ViewData["Page"] = "Storico Consumi";
}
<link rel="stylesheet" href="~/css/table.css" asp-append-version="true" />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.24/css/jquery.dataTables.css">
<script type="text/javascript" charset="utf8" src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.js"></script>
<script>
    $(document).ready(function () {
        $('#tabStoricoConsumi').DataTable();
    });
</script>

<div style="margin: 1em;">
    <h4>Storico consumi</h4>
    <small>• Viene visualizzato tutto lo storico dei consumi idrici dell'azienda agricola.</small>
    <hr style="margin-top: 0.5em; margin-bottom: 0.5em;">

    <canvas id="consumiChart" height="0" margin="0"></canvas>
    <div id="graphics"></div>
    
    <br />
    <h5>Tabella generale</h5>
    <table id="tabStoricoConsumi" class="table">
        <thead>
            <tr>
                <th>Campo</th>
                <th>Data</th>
                <th>Quantità Prenotata (litri)</th>
                <th>Quantità Consumata (litri)</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.StoricoConsumi!=null)
            {
                @foreach (var consumo in Model.StoricoConsumi)
                {
                    <tr>
                        <td>@consumo.Campo</td>
                        <td>@consumo.Data</td>
                        <td>@consumo.QuantitaPrenotata</td>
                        <td>@consumo.LitriConsumati</td>
                    </tr>
                }
            }
            else
            {
                <label>Nessun consumo presente</label><br />
            }
            

        </tbody>
    </table>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        var consumiData = @Html.Raw(JsonConvert.SerializeObject(Model.StoricoConsumi));

        // Raggruppa i dati per campo
        var consumiPerCampo = {};
        consumiData.forEach(function (consumo) {
            if (!consumiPerCampo[consumo.Campo]) {
                consumiPerCampo[consumo.Campo] = [];
            }
            consumiPerCampo[consumo.Campo].push(consumo);
        });

        // Inizializzazione div per i grafici e le tabelle
        var mainDiv = document.getElementById('graphics');

        // Configurazione del grafico
        var charts = {};
        Object.keys(consumiPerCampo).forEach(function (campo) {
            // Ordina gli elementi per data
            consumiPerCampo[campo].sort(function (a, b) {
                return new Date(a.Data) - new Date(b.Data);
            });

            // Creazione del titolo della sezione (grafico + tabella)
            var sectionTitle = document.createElement('h5');
            sectionTitle.innerHTML = 'Campo: ' + campo;
            mainDiv.appendChild(sectionTitle);

            // Creazione del canvas per il grafico
            var canvasId = 'consumiChart_' + campo.replace(/\s+/g, ''); // ID unico per ogni grafico
            var newCanvas = document.createElement('canvas');
            newCanvas.id = canvasId;
            newCanvas.height = 40;
            mainDiv.appendChild(newCanvas);

            var newCtx = newCanvas.getContext('2d');

            charts[campo] = new Chart(newCtx, {
                type: 'line',
                data: {
                    labels: consumiPerCampo[campo].map(consumo => consumo.Data),
                    datasets: [
                        {
                            label: 'Quantità Prenotata',
                            data: consumiPerCampo[campo].map(consumo => consumo.QuantitaPrenotata),
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 2
                        },
                        {
                            label: 'Litri Consumati',
                            data: consumiPerCampo[campo].map(consumo => consumo.LitriConsumati),
                            backgroundColor: 'rgba(255, 99, 132, 0.2)',
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 2
                        }
                    ]
                },
                options: {}
            });

            
            // Aggiunta di uno spazio tra il titolo della sezione e la tabella
            var br = document.createElement('br');
            mainDiv.appendChild(br);

            // Creazione della tabella per il campo
            var tableId = 'tabStoricoConsumi_' + campo.replace(/\s+/g, ''); // ID unico per ogni tabella
            var newTable = document.createElement('table');
            newTable.id = tableId;
            newTable.className = 'table';
            mainDiv.appendChild(newTable);

            // Intestazione della tabella
            var tableHeader = document.createElement('thead');
            tableHeader.innerHTML = '<tr><th>Data</th><th>Quantità Prenotata (litri)</th><th>Quantità Consumata (litri)</th></tr>';
            newTable.appendChild(tableHeader);

            // Corpo della tabella
            var tableBody = document.createElement('tbody');
            consumiPerCampo[campo].forEach(function (consumo) {
                var row = document.createElement('tr');
                row.innerHTML = '<td>' + consumo.Data + '</td><td>' + consumo.QuantitaPrenotata + '</td><td>' + consumo.LitriConsumati + '</td>';
                tableBody.appendChild(row);
            });
            newTable.appendChild(tableBody);

            // Aggiunta di uno spazio tra il titolo della sezione e la tabella
            var br = document.createElement('br');
            mainDiv.appendChild(br);

            // Aggiunta della linea dopo il grafico
            var hrLine = document.createElement('hr');
            hrLine.style.marginTop = '0.5em';
            hrLine.style.marginBottom = '0.5em';
            mainDiv.appendChild(hrLine);

        });
    });
</script>


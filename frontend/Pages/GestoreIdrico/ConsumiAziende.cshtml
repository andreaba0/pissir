@page
@using Newtonsoft.Json
@model frontend.Pages.GestoreIdrico.ConsumiAziendeModel
@{
    ViewData["Page"] = "Consumi Aziende";
}
<link rel="stylesheet" href="~/css/table.css" asp-append-version="true" />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div style="margin: 1em;">
    <h4>Consumi aziende</h4>
    <small>• Vengono visualizzati tutti i consumi idrici delle aziende agricole a cui si è venduto l'acqua.</small>
    <hr style="margin-top: 0.5em; margin-bottom: 1em;">

    <canvas id="consumiAziendeChart" height="90"></canvas><br />

    <table id="tabConsumiAziende" class="table">
        <thead>
            <tr>
                <th>Partita IVA</th>
                <th>Campo</th>
                <th>Data</th>
                <th>Litri Consumati</th>
                <th>Quantità Prenotata (litri)</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.consumiAziende != null)
            {
                @foreach (var consumo in Model.consumiAziende)
                {
                    <tr>
                        <td>@consumo.PartitaIva</td>
                        <td>@consumo.Campo</td>
                        <td>@consumo.Data</td>
                        <td>@consumo.LitriConsumati</td>
                        <td>@consumo.QuantitaPrenotata</td>
                    </tr>
                }
            }
            else
            {
                <label>Nessun consumo presente</label>
                <br />
            }


        </tbody>
    </table>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var consumiData = @Html.Raw(JsonConvert.SerializeObject(Model.consumiAziende));

        // Inizializzazione canvas per il grafico
        var ctx = document.getElementById('consumiAziendeChart').getContext('2d');

        // Get campi, litri consumati e prenotati
        var campi = consumiData.map(function (consumo) {
            return consumo.Campo+" - P.Iva "+consumo.PartitaIva;
        });

        var litriConsumati = consumiData.map(function (consumo) {
            return consumo.LitriConsumati;
        });

        var quantitaPrenotata = consumiData.map(function (consumo) {
            return consumo.QuantitaPrenotata;
        });

        // Configurazione del grafico
        var chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: campi,
                datasets:
                    [
                        {
                            label: 'Quantità Prenotata',
                            data: quantitaPrenotata,
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 2
                        },
                        {
                            label: 'Litri Consumati',
                            data: litriConsumati,
                            backgroundColor: 'rgba(255, 99, 132, 0.2)',
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 2
                        }
                    ]
            },
            options: {

            }
        });
    });
</script>